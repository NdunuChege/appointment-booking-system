DENTIST APPOINTMENT MANAGEMENT SYSTEM

OVERVIEW

This project is a Dentist Appointment Management System built using Python, SQLAlchemy, and SQLite. It allows users to manage patients, dentists, and appointments using a command-line interface.

FEATURES

Add, view, and delete Patients

Add, view, and delete Dentists

Create, view, and delete Appointments

Uses SQLAlchemy ORM for database management

Supports Alembic migrations for database schema updates

Command-line interface using Click

TECHNOLOGIES USED

Python (CLI and database interaction)

SQLAlchemy (ORM for database management)

SQLite (Lightweight database for data storage)

Click (Command-line interface framework)

Alembic (Database migrations)

SETUP INSTRUCTIONS

Prerequisites

Make sure you have Python installed (version 3.7 or higher). You can check by running:

python --version

INSTALLATIONS

Clone the Repository

git clone https://github.com/your-username/dentist-appointment-system.git
cd dentist-appointment-system

Create a Virtual Environment (optional but recommended)

python -m venv venv
source venv/bin/activate  # On Windows use `venv\Scripts\activate`

INSTALL DEPENDANCIES

pip install -r requirements.txt

Initialize the Database

python -c 'from database.config import init_db; init_db()'

Run Alembic Migrations

alembic upgrade head

USAGE

Running the CLI

To interact with the system, use the CLI commands:

Start the CLI

python main.py

Available Commands
| Command | Description |
|---------|-------------|
| create-patient | Add a new patient |
| view-patients | View all patients |
| delete-patient | Delete a patient |
| create-dentist | Add a new dentist |
| view-dentists | View all dentists |
| delete-dentist | Delete a dentist |
| create-appointment | Schedule an appointment |
| view-appointments | View all appointments |
| delete-appointment | Cancel an appointment |

Example:

python main.py create-patient

PROJECT STRUCTURE

├── database/
│   ├── config.py        # Database setup and initialization
│   ├── __init__.py      # Package initialization
│
├── models/
│   ├── patient.py       # Patient model
│   ├── dentist.py       # Dentist model
│   ├── appointment.py   # Appointment model
│   ├── __init__.py      # Import all models
│
├── migrations/          # Alembic migration scripts
│
├── main.py              # CLI interface
├── requirements.txt     # Dependencies list
├── README.md            # Documentation

DATABASE SCHEMA

Patients (id, name, contact_info, age, gender)

Dentists (id, name, specialty, contact_info)

Appointments (id, patient_id, dentist_id, date, time, status)

CONTRIBUTING

Feel free to fork this repository and contribute to improving the system. Pull requests are welcome!

LICENSE

This project is licensed under the MIT License.